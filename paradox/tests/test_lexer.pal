; Test file for PAL lexer
; Tests various token types and syntax

; This is a semicolon comment
// This is a C++ style comment (ObjectPAL)
{ This is a block comment }

proc testTokens()
var
  ; Variable declarations with various types
  intVar : SmallInt
  longVar : LongInt
  numVar : Number
  strVar : String
  logVar : Logical
  dateVar : Date
  timeVar : Time
begin
  ; Integer constants
  intVar = 123
  intVar = 0xFF  ; Hexadecimal (ObjectPAL)

  ; Floating point constants
  numVar = 123.456
  numVar = 1.23e10
  numVar = .5

  ; String constants
  strVar = "Hello, World!"
  strVar = "Line with\nescapes\t"

  ; Logical constants
  logVar = true
  logVar = false

  ; Operators
  intVar = 1 + 2 - 3 * 4 / 5
  intVar = 10 div 3
  intVar = 10 mod 3
  logVar = (1 = 2) or (3 <> 4)
  logVar = (5 < 6) and (7 <= 8)
  logVar = (9 > 10) or (11 >= 12)
  logVar = not logVar

  ; Assignment operators
  intVar := 42
  intVar = 42  ; PAL allows both := and =

  ; Array subscripts
  strVar = "test"[1]

  ; Field access
  ; dateVar.year = 2025

  ; Parentheses and brackets
  intVar = (1 + 2) * 3
  ; arr[5] = 10
end
endproc
