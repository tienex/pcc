#	$Id$
#
# Makefile.in for ccom
#
VPATH=@srcdir@
srcdir=@srcdir@
top_srcdir=@top_srcdir@
builddir=@builddir@
top_builddir=@top_builddir@
CC = @CC@
EXEEXT = @EXEEXT@
BINPREFIX = @BINPREFIX@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@ @ADD_CFLAGS@
CPPFLAGS = @CPPFLAGS@ @ADD_CPPFLAGS@ -D_ISOC99_SOURCE \
	-Dos_$(TARGOS) -Dmach_$(TARGMACH) \
	-I$(srcdir) -I$(builddir) -I$(top_builddir) -I$(MIPDIR) -I$(MDIR) \
	-I$(top_srcdir)/os/$(TARGOS) -I$(COMMONDIR) \
	-I$(top_srcdir)/libx86asm
LIBS = @LIBS@ -L$(top_builddir)/libx86asm -lx86asm
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LFLAGS =
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
YACC = @YACC@
YFLAGS = @YFLAGS@
TARGOS = @targos@
TARGOSVER = @targosver@
TARGMACH = @targmach@
prefix = @prefix@
exec_prefix = @exec_prefix@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
mandir = @mandir@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
CCOM=$(BINPREFIX)ccom$(EXEEXT)
CC0=$(BINPREFIX)cc0$(EXEEXT)
CC1=$(BINPREFIX)cc1$(EXEEXT)
CF0=@CF0@
CF1=@CF1@

MDIR=$(top_srcdir)/arch/$(TARGMACH)
MIPDIR=$(top_srcdir)/mip
COMMONDIR=$(top_srcdir)/common

DEST=@CCNAMES@
MANPAGE=$(BINPREFIX)ccom
MKEXT=mkext$(EXEEXT)

all: $(DEST)

OBJS=	builtins.o cgram.o code.o common.o compat.o dwarf.o external.o	\
	gcc_compat.o init.o inline.o local.o local2.o main.o strtodg.o	\
	match.o optim.o optim2.o order.o pftn.o reader.o softfloat.o	\
	regs.o scan.o stabs.o symtabs.o table.o trees.o unicode.o	\
	debugsym.o debugsym_types.o debugsym_integration.o debugsym_lang.o \
	debugsym_dwarf.o debugsym_codeview.o debugsym_coff.o		\
	debugsym_stabs.o debugsym_dbx.o debugsym_borland.o debugsym_watcom.o \
	debugsym_hll.o debugsym_hpsom.o debugsym_vms.o			\
	debugsym_macos.o debugsym_atari.o debugsym_amiga.o debugsym_acorn.o \
	debugsym_aout.o debugsym_macho.o debugsym_omf.o			\
	debugsym_pdb.o debugsym_ctf.o debugsym_btf.o debugsym_plan9.o debugsym_tads.o \
	debugsym_nlm.o debugsym_symbian.o debugsym_palmos.o debugsym_vxworks.o

OBJS0=  builtins.o cgram.o code.o common.o compat.o dwarf.o external.o	\
	gcc_compat.o init.o inline.o local.o main.o             	\
	optim.o pftn.o softfloat.o strtodg.o				\
	scan.o stabs.o symtabs.o trees.o unicode.o			\
	debugsym.o debugsym_types.o debugsym_integration.o debugsym_lang.o \
	debugsym_dwarf.o debugsym_codeview.o debugsym_coff.o		\
	debugsym_stabs.o debugsym_dbx.o debugsym_borland.o debugsym_watcom.o \
	debugsym_hll.o debugsym_hpsom.o debugsym_vms.o			\
	debugsym_macos.o debugsym_atari.o debugsym_amiga.o debugsym_acorn.o \
	debugsym_aout.o debugsym_macho.o debugsym_omf.o			\
	debugsym_pdb.o debugsym_ctf.o debugsym_btf.o debugsym_plan9.o debugsym_tads.o \
	debugsym_nlm.o debugsym_symbian.o debugsym_palmos.o debugsym_vxworks.o

OBJS1=  common2.o compat.o external.o           			\
	local2.o main2.o                				\
	match.o optim2.o order.o reader.o      				\
	regs.o table.o


LOBJS=	mkext.lo common.lo table.lo

HDRS=	$(srcdir)/pass1.h $(MIPDIR)/pass2.h $(MIPDIR)/manifest.h	\
	$(MDIR)/macdefs.h $(MIPDIR)/node.h $(COMMONDIR)/compat.h	\
	$(COMMONDIR)/unicode.h

#
# round 1: generate external.[ch], cgram.[ch] & scan.c
#

$(LOBJS): $(HDRS)

mkext.lo: $(MIPDIR)/mkext.c
	$(CC_FOR_BUILD) $(CFLAGS) $(CPPFLAGS) -DMKEXT -c -o $@ $(MIPDIR)/mkext.c

common.lo: $(MIPDIR)/common.c
	$(CC_FOR_BUILD) $(CFLAGS) $(CPPFLAGS) -DMKEXT -c -o $@ $(MIPDIR)/common.c

table.lo: $(MDIR)/table.c
	$(CC_FOR_BUILD) $(CFLAGS) $(CPPFLAGS) -DMKEXT -c -o $@ $(MDIR)/table.c

$(MKEXT): $(LOBJS)
	$(CC_FOR_BUILD) $(LDFLAGS) $(LOBJS) -o $@ $(LIBS)

external.c: $(MKEXT)
	$(builddir)/$(MKEXT)

cgram.c: $(srcdir)/cgram.y
	$(YACC) $(YFLAGS) -d $(srcdir)/cgram.y
	mv -f y.tab.c cgram.c
	mv -f y.tab.h cgram.h

scan.c: $(srcdir)/scan.l
	$(LEX) $(LFLAGS) $(srcdir)/scan.l
	mv -f $(LEX_OUTPUT_ROOT).c scan.c

#
# round 2: compile $(OBJS)
#

$(OBJS): $(HDRS) external.c cgram.c

builtins.o: $(srcdir)/builtins.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/builtins.c

cgram.o: cgram.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ cgram.c

code.o: $(MDIR)/code.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MDIR)/code.c

common.o: $(MIPDIR)/common.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MIPDIR)/common.c

common2.o: $(MIPDIR)/common.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MIPDIR)/common.c

compat.o: $(COMMONDIR)/compat.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(COMMONDIR)/compat.c

dwarf.o: $(srcdir)/dwarf.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/dwarf.c

external.o: external.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ external.c

gcc_compat.o: $(srcdir)/gcc_compat.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/gcc_compat.c

init.o: $(srcdir)/init.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/init.c

inline.o: $(srcdir)/inline.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/inline.c

local.o: $(MDIR)/local.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MDIR)/local.c

local2.o: $(MDIR)/local2.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MDIR)/local2.c

main.o: $(srcdir)/main.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/main.c

main2.o: $(srcdir)/main.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/main.c

match.o: $(MIPDIR)/match.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MIPDIR)/match.c

optim.o: $(srcdir)/optim.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/optim.c

optim2.o: $(MIPDIR)/optim2.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MIPDIR)/optim2.c

order.o: $(MDIR)/order.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MDIR)/order.c

pftn.o: $(srcdir)/pftn.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/pftn.c

reader.o: $(MIPDIR)/reader.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MIPDIR)/reader.c

regs.o: $(MIPDIR)/regs.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MIPDIR)/regs.c

scan.o: scan.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ scan.c

softfloat.o: $(COMMONDIR)/softfloat.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(COMMONDIR)/softfloat.c

stabs.o: $(srcdir)/stabs.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/stabs.c

strtodg.o: $(COMMONDIR)/strtodg.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(COMMONDIR)/strtodg.c

symtabs.o: $(srcdir)/symtabs.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/symtabs.c

table.o: $(MDIR)/table.c
	$(CC) $(CF1) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(MDIR)/table.c

trees.o: $(srcdir)/trees.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/trees.c

unicode.o: $(COMMONDIR)/unicode.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(COMMONDIR)/unicode.c

debugsym.o: $(srcdir)/debugsym.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym.c

debugsym_dwarf.o: $(srcdir)/debugsym_dwarf.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_dwarf.c

debugsym_codeview.o: $(srcdir)/debugsym_codeview.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_codeview.c

debugsym_coff.o: $(srcdir)/debugsym_coff.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_coff.c

debugsym_stabs.o: $(srcdir)/debugsym_stabs.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_stabs.c

debugsym_dbx.o: $(srcdir)/debugsym_dbx.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_dbx.c

debugsym_borland.o: $(srcdir)/debugsym_borland.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_borland.c

debugsym_watcom.o: $(srcdir)/debugsym_watcom.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_watcom.c

debugsym_types.o: $(srcdir)/debugsym_types.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_types.c

debugsym_integration.o: $(srcdir)/debugsym_integration.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_integration.c

debugsym_lang.o: $(srcdir)/debugsym_lang.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_lang.c

debugsym_hll.o: $(srcdir)/debugsym_hll.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_hll.c

debugsym_hpsom.o: $(srcdir)/debugsym_hpsom.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_hpsom.c

debugsym_vms.o: $(srcdir)/debugsym_vms.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_vms.c

debugsym_macos.o: $(srcdir)/debugsym_macos.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_macos.c

debugsym_atari.o: $(srcdir)/debugsym_atari.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_atari.c

debugsym_amiga.o: $(srcdir)/debugsym_amiga.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_amiga.c

debugsym_acorn.o: $(srcdir)/debugsym_acorn.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_acorn.c

debugsym_aout.o: $(srcdir)/debugsym_aout.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_aout.c

debugsym_macho.o: $(srcdir)/debugsym_macho.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_macho.c

debugsym_omf.o: $(srcdir)/debugsym_omf.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_omf.c

debugsym_pdb.o: $(srcdir)/debugsym_pdb.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_pdb.c

debugsym_ctf.o: $(srcdir)/debugsym_ctf.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_ctf.c

debugsym_btf.o: $(srcdir)/debugsym_btf.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_btf.c

debugsym_plan9.o: $(srcdir)/debugsym_plan9.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_plan9.c

debugsym_tads.o: $(srcdir)/debugsym_tads.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_tads.c

debugsym_nlm.o: $(srcdir)/debugsym_nlm.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_nlm.c

debugsym_symbian.o: $(srcdir)/debugsym_symbian.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_symbian.c

debugsym_palmos.o: $(srcdir)/debugsym_palmos.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_palmos.c

debugsym_vxworks.o: $(srcdir)/debugsym_vxworks.c
	$(CC) $(CF0) $(CFLAGS) $(CPPFLAGS) -c -o $@ $(srcdir)/debugsym_vxworks.c

#
# round 3: build $(DEST)
#

$(CCOM): $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) -o $@ $(LIBS)

$(CC0):	$(OBJS0)
	$(CC) $(LDFLAGS) $(OBJS0) -o $@ $(LIBS)

$(CC1):	$(OBJS1)
	$(CC) $(LDFLAGS) $(OBJS1) -o $@ $(LIBS)

install: $(DEST)
	test -z "$(DESTDIR)$(libexecdir)" || mkdir -p "$(DESTDIR)$(libexecdir)"
	$(INSTALL_PROGRAM) $(DEST) $(DESTDIR)$(libexecdir)
	test -z "$(DESTDIR)$(mandir)/man1" || mkdir -p "$(DESTDIR)$(mandir)/man1"
	$(INSTALL_DATA) $(srcdir)/ccom.1 $(DESTDIR)$(mandir)/man1/$(MANPAGE).1

clean:
	rm -f $(DEST) $(OBJS0) $(OBJS1) $(MKEXT) $(LOBJS) \
	$(LEX_OUTPUT_ROOT).c scan.c y.tab.[ch] cgram.[ch] external.[ch]

distclean: clean
	rm -f Makefile
